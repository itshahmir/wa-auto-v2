events {
    worker_connections 1024;
}

http {
    upstream wa_backend_1 {
        server 172.20.0.11:3000;
    }

    upstream wa_backend_2 {
        server 172.20.0.12:3000;
    }

    upstream wa_backend_3 {
        server 172.20.0.13:3000;
    }

    upstream wa_backend_4 {
        server 172.20.0.14:3000;
    }

    # Route users based on user ID hash
    map $arg_userId $backend {
        default wa_backend_1;
        ~^[1-4][0-9]?$ wa_backend_1;        # Users 1-49
        ~^5[0-9]|^[6-9][0-9]|^100$ wa_backend_2;  # Users 50-100
        ~^1[0-4][0-9]|^150$ wa_backend_3;    # Users 101-150
        ~^1[5-9][0-9]|^200$ wa_backend_4;    # Users 151-200
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name whatsapp.social-crm.co.il;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name whatsapp.social-crm.co.il;

        # SSL certificate files (mounted from host)
        ssl_certificate /etc/letsencrypt/live/whatsapp.social-crm.co.il/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/whatsapp.social-crm.co.il/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Client body size for uploads
        client_max_body_size 100M;

        # Health check endpoint
        location /health {
            proxy_pass http://wa_backend_1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route API calls based on user ID
        location / {
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}